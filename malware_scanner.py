####################
#Malware Scanner
#
#This script will scan all the files in a given folder for malware in batches of 10 files. 
#This script will flag a file malicious based off VirusTotal's analysis which 
#This script will need root privileges to run succesfully.
####################

import requests
import os
import time
import json

def fileupload(filename, headers):
    url = "https://www.virustotal.com/api/v3/files"
    files = {"file": (filename, open(filename, "rb"), "application/octet-stream")}
    response = requests.post(url, files=files, headers=headers)
    return response

def filereport(aid, headers):
    analysis_url = f"https://www.virustotal.com/api/v3/analyses/{aid}"
    analysis_response = requests.get(analysis_url, headers=headers)
    return json.loads(analysis_response.text)

def check_for_malicious_files(folder_path):
    headers = {"Accept": "application/json", "x-apikey": "virus-total-api-key"}  #insert your VirusTotal Api key here. 
    batch = 0
    for roots, dirs, files in os.walk(folder_path):
        for filename in files:
            fpath = os.path.join(roots, filename)
                        
            if "malware" in filename:
                response = fileupload(fpath, headers)

                if response.status_code == 200:
                    jsondata = json.loads(response.text)
                    aid = jsondata['data']['id']
                    time.sleep(30)  # to ensure the api requests are within the usage limits for a free account. 
                    batch += 1
                    aresult = filereport(aid, headers)
                    print(aresult)
                    malcount = aresult['data']['attributes']['stats']['malicious']
                    
                
                    if malcount > 3:
                        print(f"Malicious file found: {fpath}")  
            if batch % 10 == 0:
                print(f"Batch {batch/10} completed scanning, cooling down for 60 seconds..")
                time.sleep(60)
            else:
                continue

folder_to_scan = "enter_directory"  # enter the directory that needs to be scanned. 
check_for_malicious_files(folder_to_scan)


ip 